/*
Explorando o SageMaker Canvas com Lógica de Programação
3 / 3 - Indicando a Aplicação dos Modelos de Base do SageMaker Canvas

Básico - Princípios Básicos

Descrição
O SageMaker Canvas oferece uma variedade de modelos de base prontos para uso, que incluem o Claude 2, Amazon Titan e Jurassic-2, todos construídos sobre a tecnologia Amazon Bedrock. Além disso, modelos como Falcon e MPT estão disponíveis através da SageMaker JumpStart. Esses modelos são projetados para facilitar a implementação de soluções de Machine Learning (ML) sem a necessidade de codificação profunda, permitindo que analistas de negócios e cientistas de dados colaborem de maneira eficaz.
Perante o exposto, complete o código deste desafio, associando os modelos de base do SageMaker Canvas com suas respectivas aplicações.

Saiba mais em: Amazon SageMaker Canvas.

Entrada
A entrada consiste no nome do modelo de base do SageMaker Canvas para o qual você deve retornar a aplicação. Neste contexto, os seguintes modelos são considerados válidos para este desafio de código:

    - "Claude 2"
    - "Amazon Titan"
    - "Jurassic-2"
    - "Falcon"
    - "MPT"

Saída
A saída esperada é a aplicação associada ao modelo fornecido como entrada. Seguem as saídas possíveis, listadas aleatoriamente, para que você possa analisar e associar corretamente:

    - "Processamento de linguagem natural e geração de texto"
    - "Análises de dados complexos"
    - "Análises preditivas em tempo real"
    - "Aprendizado de transferência para diferentes domínios de dados"
    - "Tarefas de classificação e regressão"

Exemplos
A tabela abaixo apresenta exemplos com alguns dados de entrada e suas respectivas saídas esperadas. Certifique-se de testar seu programa com esses exemplos e com outros casos possíveis.

|----------------------------------------------------------------------|
| Entrada      | Saída                                                 |
|----------------------------------------------------------------------|
| Jurassic-2   | Processamento de linguagem natural e geração de texto |
|----------------------------------------------------------------------|
| Amazon Titan | Análises de dados complexos                           |
|----------------------------------------------------------------------|
| Claude 2     | Análises preditivas em tempo real                     |
|----------------------------------------------------------------------|

A tabela abaixo apresenta exemplos com alguns dados de entrada e suas respectivas saídas esperadas. Certifique-se de testar seu programa com esses exemplos e com outros casos possíveis.

*/

# Recebe a Entrada do usuário e armazena na variável "entrada"
entrada = input()

# Função responsável por receber um modelo e retornar sua respectiva aplicação.
def aplicar_modelos(modelo):
	if modelo == "Jurassic-2":
		return "Processamento de linguagem natural e geração de texto"

	# TODO: Preencha corretamente a aplicação de cada modelo, considerando as condições abaixo e Saídas possíveis:		
	elif modelo == "Amazon Titan":
		return "Análises de dados complexos"

	elif modelo == "Claude 2":
		return "Análises preditivas em tempo real"

	elif modelo == "Falcon":
		return "Tarefas de classificação e regressão"

	elif modelo == "MPT":
		return "Aprendizado de transferência para diferentes domínios de dados"   

print(aplicar_modelos(entrada))